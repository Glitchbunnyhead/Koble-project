   ---------------TEST EXAMPLES-----------
    
   
   
   private final CompanyDAO lafafaCompanyDAO;

     public MeuController(CompanyDAO lafafaCompanyDAO) {
        this.lafafaCompanyDAO = lafafaCompanyDAO;
    }   
    @GetMapping("/testeDAO/teste-deletar-puro") 
    public String testeDeDelecaoPura() {

    // 1. Defina o ID que você quer DELETAR.
    //    ⚠️ IMPORTANTE: Este ID (1L) deve corresponder a uma linha existente
    //    na sua tabela 'company' no MySQL.
    long idParaDeletar = 4; 
    
    // 2. Executa SOMENTE o método 'delete' do DAO
    String resultadoDelecao = this.lafafaCompanyDAO.delete(idParaDeletar);
    
    return "Executando APENAS deleção do ID " + idParaDeletar + ". Resultado: " + resultadoDelecao;

    ------------------------------------------------------------------------------------------
      
        // 1. Defina o ID que você quer ATUALIZAR. 
        //    ⚠️ IMPORTANTE: Este ID deve existir no seu banco.
        long idParaAtualizar = 5; 
        
        // 2. Crie um novo objeto Company com os novos dados.
        //    O primeiro parâmetro do construtor deve ser o ID que você quer atualizar.
        Company companyAtualizada = new Company(
            "11.111.111/1111-11",         // 2º: CNPJ (Pode ser o mesmo ou novo)
            "novo_email_atualizado@atualizado.com", // 3º: NOVO EMAIL
            "Lafafa Enterprise Novo Nome", // 4º: NOVO NOME
            "nova_senha_123",             // 5º: NOVA SENHA
            "88888-8888"                  // 6º: NOVO TELEFONE
        );

        // 3. Executa SOMENTE o método 'update' do DAO
        String resultadoAtualizacao = this.lacucuShopDAO.update(companyAtualizada);
        
        return "Executando APENAS atualização do ID " + idParaAtualizar + 
               ". Novo Email: " + companyAtualizada.getEmail() + 
               ". Resultado: " + resultadoAtualizacao;
    }
    ------------------------------------------------------------------------------------------
     private final CompanyDAO lafafaCompanyDAO;

    public MeuController(CompanyDAO lafafaCompanyDAO) {
        this.lafafaCompanyDAO = lafafaCompanyDAO;
    }
    
    // ... (Métodos create, update e delete aqui) ...

    @GetMapping("/texteDAO/teste-leitura-pura") 
    public String testeDeLeituraPura() {
        
        // 1. Defina o ID que você quer LER (buscar).
        //    ⚠️ IMPORTANTE: Este ID deve existir no seu banco.
        long idParaLer = 2; 
        
        // 2. Executa SOMENTE o método 'read' do DAO, que retorna um objeto Company
        Company companyEncontrada = this.lafafaCompanyDAO.read(idParaLer);
        
        // 3. Verifica se a busca retornou algo (não é null)
        if (companyEncontrada != null) {
            return "Busca por ID " + idParaLer + " realizada com sucesso. Dados encontrados: " + 
                   "Nome: " + companyEncontrada.getName() + 
                   ", Email: " + companyEncontrada.getEmail() + 
                   ", CNPJ: " + companyEncontrada.getCnpj();
        } else {
            return "Erro ao ler a empresa: Nenhuma empresa encontrada com o ID " + idParaLer + ".";
        }
    }
    ----------------------------------------------------------------------------------------------
    private final CompanyDAO lafafaCompanyDAO;

    public MeuController(CompanyDAO lafafaCompanyDAO) {
        this.lafafaCompanyDAO = lafafaCompanyDAO;
    }
    
    // ... (Outros métodos create, read, update, delete aqui) ...

    @GetMapping("/texteDAO/teste-listagem-pura") 
    public String testeDeListagemPura() {
        
        // 1. Executa SOMENTE o método 'listAll' do DAO
        List<Company> listaDeEmpresas = this.lafafaCompanyDAO.listAll();
        
        // 2. Verifica se a lista não está vazia
        if (listaDeEmpresas == null || listaDeEmpresas.isEmpty()) {
            return "Nenhuma empresa encontrada no banco de dados. A lista está vazia.";
        }
        
        // 3. Constrói uma string com os nomes de todas as empresas
        StringBuilder resultado = new StringBuilder("Lista de Empresas Encontradas (" + listaDeEmpresas.size() + " total):\n");
        resultado.append("----------------------------------------------------\n");
        
        for (Company company : listaDeEmpresas) {
            resultado.append("ID: ").append(company.getId())
                     .append(" | Nome: ").append(company.getName())
                     .append(" | CNPJ: ").append(company.getCnpj())
                     .append("\n");
        }
        resultado.append("----------------------------------------------------\n");

        return resultado.toString();
    }